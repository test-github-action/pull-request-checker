name: Plagiarism search
inputs:
  github-token:  
    description: 'Github token'
    required: true
    default: "${{ github.token }}"
  repository-name:
    description: 'Full name of repo. Format.: <owner>/<name of repo>'
    required: true
    default: ${{ github.event.repository.full_name }}

on:
  workflow_dispatch:

jobs:
  plag-search:
    runs-on: self-hosted
    steps:
      - name: Find branches for pull requests
        id: branches
        run: |
          docker run mirrin/pr-automation:plagiat -v ${PR_BOT_CONFIG_PATH}:/config get_pull_requests_branches.py /config ${{ inputs.repository-name }} ${{ inputs.github-token }} > output.txt
          echo 'branches=$(cat output.txt)' >> "$GITHUB_OUTPUT"

      - name: Clone all branches
        if: success() && steps.branches.outputs.branches
        run: |
          git clone https://github.com/${{ inputs.repository-name }} check_plag
          cd check_plag
          for branch in ${{ steps.branches.outputs.branches }}; do
              git branch --track "${branch##*/}" "$branch"
          done

      - name: Merge all branches
        run: |
          cd check_plag
          git config --global user.email "robot@example.com"
          git config --global user.name "robot"
          git merge $(git branch | tr -s '\r\n*' ' ' | sed -r 's/main//' | sed -r 's/master//') -m "Merge all branches."

      - name: Run plagiarism searching
        run: |
          cd check_plag
          docker run --rm --volume $(pwd):/usr/src/works:ro --volume $(pwd)/reports:/usr/src/reports:rw "artanias/codeplag-ubuntu20.04:0.2.8" /bin/bash -c "codeplag settings modify --reports /usr/src/reports && codeplag check --extension py --directories /usr/src/works/"

      - name: Save reports
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: check_plag/reports/
          retention-days: 3
          if-no-files-found: error
